plugins {
    id 'java'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'amalgama.Main'
        )
    }
}

group = 'amalgama'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

tasks.named("processResources") {
    duplicatesStrategy = DuplicatesStrategy.WARN
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.withType(GroovyCompile).configureEach {
    groovyOptions.encoding = 'UTF-8'
}

sourceSets {
    main {
        resources {
            srcDirs "src/main/resources"
        }
    }
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.1'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api-parent:4.0.1'
    implementation 'org.apache.logging.log4j:log4j-api:2.22.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.22.0'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.22.0'
    implementation 'org.quartz-scheduler:quartz:2.3.2'
    implementation 'io.netty:netty:3.10.6.Final'
    implementation 'org.codehaus.jackson:jackson-mapper-asl:1.9.13'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.15.2'
    implementation 'org.hibernate:hibernate-core:6.2.7.Final'
    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    runtimeOnly 'org.apache.logging.log4j:log4j-core'
}

test {
    useJUnitPlatform()
}